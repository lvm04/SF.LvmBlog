@model ArticleListViewModel
@addTagHelper *, SF.LvmBlog

@{
    ViewData["Title"] = "Статьи";
}

<div class="container">
    <div class="row mt-5">
        <div class="col-6 offset-3">
            <h4>@ViewData["Header"]</h4>
            <br />
            <div class="d-flex mb-3">
                <a class="btn btn-outline-success btn-sm" asp-controller="Article" asp-action="New">Добавить статью</a>
                <div class="dropdown ms-auto">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                        Сортировка
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                        <li><a class="dropdown-item" href="#">Action</a></li>
                        <li><a class="dropdown-item" href="#">Another action</a></li>
                        <li><a class="dropdown-item" href="#">Something else here</a></li>
                    </ul>
                </div>

            </div>
            @if (Model.Articles != null && Model.Articles.Count() > 0)
            {
                @foreach (var article in Model.Articles)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">
                                <a asp-controller="Article" asp-action="GetById" asp-route-id="@article.Id" class="nav-link text-dark" style="padding-left: 0;">@article.Title</a>
                            </h5>
                            <h6 class="card-subtitle mb-2 text-muted">Автор: @article.Author?.Name</h6>
                            @await Html.PartialAsync("_Options", article.Tags.Select(t => t.Name).ToList())
                            <p class="card-text">@article.Text ...</p>

                            <div class="d-flex mb-3">

                                @if (User.Identity.IsAuthenticated
                               && (User.IsInRole(Roles.Admin.ToString()) || User.IsInRole(Roles.Moderator.ToString()) || User.Identity.Name == article.Author?.Login))
                                {
                                    <a asp-controller="Article" asp-action="Edit" asp-route-id="@article.Id" class="btn btn-outline-secondary btn-sm me-3">Редактировать</a>
                                    @Html.ActionLink("Удалить", "Delete", new { id = article.Id },
                        new {
                        onclick = $"return confirm('Вы действительно хотите удалить статью \"{article.Title}\" ?');",
                        @class = "btn btn-outline-danger btn-sm me-3"
                        })
                                }
                                <span class="text-muted ms-auto" style="font-size: 0.8rem">Просмотров: @article.NumberViews</span>
                            </div>

                            <p class="card-text"><small class="text-muted">@article.TimeStamp.ToString("dd.MM.yyyy")</small></p>
                        </div>
                    </div>
                }
            }

            <br />
            <page-link page-model="Model.PageViewModel" page-action="Index" other=""
                       property="@Model.SortViewModel.Current" up="@Model.SortViewModel.Up">
            </page-link>
        </div>
    </div>
</div>


<script>
    let form = document.getElementsByName("search")[0];
    form.action = "/Article/Search";
</script>